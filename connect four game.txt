#include<iostream>
using namespace std;
void r(char[][10], int, int);
void display(char[][10]);
int check(char[][10]);
int check_line(char[][10]);
int diagonal(char[][10]);
int diagonal2(char arr[][10]);
void main()
{
	int l, s,f,o,contin;
	system("color E0");
	const int n = 10;
	char arr[n][n],Cell;
	int cell;
	int player = 1;
	do{
		for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			arr[i][j] = char(219);
		do {
			display(arr);
			cout << "player1" << " \1 \t" << "player2" << "\5\n";
			if (player % 2 == 1)
				cout << "      player1 your turn \n";
			else
				cout << "      player2 your turn \n";
			do{
				cin >> Cell;
				cell = (int)Cell;
				cell = cell - 48;
			
}
			while (cell > 10);				
			r(arr, player, cell);
			l = check(arr);
			s = check_line(arr);
			f = diagonal(arr);
			o = diagonal2(arr);
			if (f == 1 || l == 1 || s == 1 || o == 1)
			{
				display(arr);

				cout << "player1 win\3\3\3\3 \1 \3\3\3\3\a\n";
				break;
			}
			else if (l == 2 || s == 2 || f == 2 || o == 2)
			{
				display(arr);
				cout << "player2 win\3\3\3\3 \5 \3\3\3\3\a\n";
				break;
			}
			if (player == 2)
				player--;
			else
				player = 2;
		} while (f == 0);
		cout << "press 1 to continue or any key to exit ";
		cin >> contin;
	}
	while (contin== 1);
}
void display(char arr[][10])
{
	system("cls");
	cout << "  1      2     3     4     5     6     7     8     9     10\n";
	for (int j = 0; j < 61; j++)
		cout << char(287);
	cout << endl;
	for (int i = 0; i < 10; i++)
	{
		cout << "|";
		cout << "     |     |     |     |     |     |     |     |     |     |";
		cout << endl;
			cout << "|";
		for (int j = 0; j < 10; j++)
		{
			
			cout << "  " << arr[i][j] << "  |";
		}
		cout << endl;
		cout << "|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|\n";
	}
}
void r(char arr[][10], int player, int cell)
{
	for (int i = 9; i >= 0; i--)
	{
		if (arr[i][cell - 1] == char(219))
		{
			if (player % 2 == 1)
			{
				arr[i][cell - 1] = '\1';
				break;
			}
			else
			{
				arr[i][cell - 1] = '\5';
				break;
			}
		}
	}
}
int check(char arr[][10])
{
	int m = 0, n = 0;
	for (int j = 0; j < 10; j++)
	{
		m = 0; n = 0;
		for (int i = 9; i >= 0; i--)
		{
			if (arr[i][j] == '\1')
			{
				m++;
				n = 0;
			}
			else if (arr[i][j] == '\5')
			{
				n++;
				m = 0;
			}
			else
			{
				n = 0; m = 0;
			}
			if (m >= 4)
			{
				return 1;
			}
			else if (n >= 4)
			{
				return 2;
			}
		}
	}
	return 0;
}
int check_line(char arr[][10])
{
	int m = 0, n = 0;
	for (int i = 9; i >= 0; i--)
	{
		m = 0; n = 0;
		for (int j = 0; j < 10; j++)
		{
			if (arr[i][j] == '\1')
			{
				m++;
				n = 0;
			}
			else if (arr[i][j] == '\5')
			{
				n++;
				m = 0;
			}
			else
			{
				n = 0; m = 0;
			}
			if (m >= 4)
			{
				return 1;
			}
			else if (n >= 4)
			{
				return 2;
			}
		}
	}
	return 0;
}
int diagonal(char arr[][10])
{
	int m=0, n=0;
	for (int i = 0; i < 7; i++)
	{
		m = 0; n = 0;
		for (int j = 0, k = i; j < 10, k < 10; j++, k++)
		{
			if (arr[k][j] == '\1')
			{									////this for diagonal (\)down
				m++;
				n = 0;
			}
			else if (arr[k][j] == '\5')
			{
				n++;
				m = 0;
			}
			else
			{
				n = 0; m = 0;
			}
			if (m >= 4)
			{
				return 1;
			}
			else if (n >= 4)
			{
				return 2;
			}
		}
	}
			for (int i = 1; i < 7; i++)
			{
				m = 0; n = 0;
				for (int j = 0, k = i; j < 10, k < 10; j++, k++)		////this for diagonal (\)up
				{
					if (arr[j][k] == '\1')
					{
						m++;
						n = 0;
					}
					else if (arr[j][k] == '\5')
					{
						n++;
						m = 0;
					}
					else
					{
						n = 0; m = 0;
					}

					if (m >= 4)
					{
						return 1;
					}
					else if (n >= 4)
					{

						return 2;
					}
				}

			}

	return 0;
}
int diagonal2(char arr[][10])
{

	int m = 0, n = 0;
	for (int i = 9,c=0; i >=0,c<10; i--,c++)
	{														//this for diagonal (/)up
		m = 0, n = 0;
		for (int j = 0, k = i; j < 10-c, k >=0; j++, k--)
		{
			if (arr[j][k] == '\1')
			{
				m++;
				n = 0;
			}
			else if (arr[j][k] == '\5')
			{
				n++;
				m = 0;
			}
			else
			{
				n = 0; m = 0;
			}
			if (m >= 4)
			{
				return 1;
			}
			else if (n >= 4)
			{
				return 2;
			}
		}
	}
	for (int i = 9, k = 0; i >= 3, k<7; i--, k++)
	{
		m = 0, n = 0;										//this for diagonal (/)down
		for (int j = k, c = 9; j < 10, c >= k; j++, c--)
		{
			if (arr[j][c] == '\1')
			{
				m++;
				n = 0;
			}
			else if (arr[j][c] == '\5')
			{
				n++;
				m = 0;
			}
			else
			{
				n = 0; m = 0;
			}
			if (m >= 4)
			{
				return 1;
			}
			else if (n >= 4)
			{
				return 2;
			}
		}
	}
	return 0;
}